name: Release to APT Repository

on:
  workflow_call:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  release-to-apt-repository:
    name: Release to APT Repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        name: Download Client deb-Package
        with:
          name: client-deb
      - name: Configure GPG key
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
    # - name: Download some previous releases
          # TODO How can we do this?     
      - name: generate metadata
        run: |
          ls
          dpkg --version
          dpkg-scanpackages --multiversion . > Packages
          gzip -k -f Packages
          apt-ftparchive release . > Release
          gpg --default-key "ppa@schlunzis.org" -abs -o - Release > Release.gpg
          gpg --default-key "ppa@schlunzis.org" --clearsign -o - Release > InRelease
          gpg --armor --export "ppa@schlunzis.org" > KEY.gpg
          echo "deb [signed-by=/etc/apt/trusted.gpg.d/kurtama.gpg] https://ppa.schlunzis.org/ubuntu ./" > kurtama.list
          ls
      # https://github.com/marketplace/actions/ftp-deploy
      #- name: ðŸ“‚ Sync files
      #  uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      #  with:
      #    server: ppa.schlunzis.org
      #    username: someUser
      #    password: ${{ secrets.ftp_password }}
      #    server-dir: /path/to/destination/on/server/
      #    dangerous-clean-slate: false # maybe true required?
